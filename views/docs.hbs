{{!-- Documentation Page --}}
<main class="main-content">
  <!-- Hero Section -->
  <section class="hero docs-hero">
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-title">Documentation</h1>
        <p class="hero-subtitle">Complete guide to SPAMKLR API and SDK integration</p>
      </div>
    </div>
  </section>

  <!-- Documentation Content -->
  <section class="section">
    <div class="container">
      <div class="row">
        <!-- Sidebar Navigation -->
        <div class="col-lg-3">
          <div class="docs-sidebar">
            <h4>Navigation</h4>
            <ul class="docs-nav">
              <li><a href="#getting-started" class="docs-nav-item active" data-tab="getting-started">Getting Started</a></li>
              <li><a href="#authentication" class="docs-nav-item" data-tab="authentication">Authentication</a></li>
              <li><a href="#api-reference" class="docs-nav-item" data-tab="api-reference">API Reference</a></li>
              <li><a href="#sdk-integration" class="docs-nav-item" data-tab="sdk-integration">SDK Integration</a></li>
              <li><a href="#examples" class="docs-nav-item" data-tab="examples">Code Examples</a></li>
              <li><a href="#webhooks" class="docs-nav-item" data-tab="webhooks">Webhooks</a></li>
              <li><a href="#rate-limits" class="docs-nav-item" data-tab="rate-limits">Rate Limits</a></li>
              <li><a href="#errors" class="docs-nav-item" data-tab="errors">Error Handling</a></li>
            </ul>
          </div>
        </div>

        <!-- Main Content -->
        <div class="col-lg-9">
          <!-- Getting Started Panel -->
          <div id="getting-started-panel" class="docs-panel active">
            <h2>Getting Started</h2>
            <p>Welcome to the SPAMKLR API documentation. This guide will help you integrate SPAMKLR's powerful spam detection capabilities into your applications.</p>
            
            <h3>Quick Start</h3>
            <ol>
              <li>Sign up for a SPAMKLR account</li>
              <li>Generate your API key from the dashboard</li>
              <li>Install the SDK for your preferred language</li>
              <li>Make your first API call</li>
            </ol>

            <h3>Base URL</h3>
            <div class="code-block">
              <code>https://api.spamklr.com/v1</code>
            </div>

            <h3>SDKs Available</h3>
            <div class="sdk-grid">
              <div class="sdk-card">
                <i class="fab fa-js-square"></i>
                <h4>JavaScript</h4>
                <p>Node.js and Browser support</p>
              </div>
              <div class="sdk-card">
                <i class="fab fa-python"></i>
                <h4>Python</h4>
                <p>Python 3.6+ compatible</p>
              </div>
              <div class="sdk-card">
                <i class="fab fa-java"></i>
                <h4>Java</h4>
                <p>Java 8+ and Android</p>
              </div>
              <div class="sdk-card">
                <i class="fab fa-swift"></i>
                <h4>Swift</h4>
                <p>iOS and macOS support</p>
              </div>
            </div>
          </div>

          <!-- Authentication Panel -->
          <div id="authentication-panel" class="docs-panel">
            <h2>Authentication</h2>
            <p>SPAMKLR uses API keys for authentication. Include your API key in the Authorization header of every request.</p>

            <h3>Header Format</h3>
            <div class="code-block">
              <code>Authorization: Bearer YOUR_API_KEY</code>
            </div>

            <h3>Example Request</h3>
            <div class="code-example">
              <div class="example-tabs">
                <button class="example-tab active" data-lang="curl">cURL</button>
                <button class="example-tab" data-lang="javascript">JavaScript</button>
                <button class="example-tab" data-lang="python">Python</button>
              </div>
              <div class="example-content">
                <pre id="code-content">curl -X POST https://api.spamklr.com/v1/detect \
  -H "Authorization: Bearer YOUR_API_KEY" \
  -H "Content-Type: application/json" \
  -d '{"phoneNumber": "+1234567890"}'</pre>
              </div>
            </div>
          </div>

          <!-- API Reference Panel -->
          <div id="api-reference-panel" class="docs-panel">
            <h2>API Reference</h2>
            
            <h3>Detect Spam</h3>
            <div class="endpoint">
              <span class="method post">POST</span>
              <span class="url">/v1/detect</span>
            </div>
            <p>Analyze a phone number or call content for spam indicators.</p>

            <h4>Parameters</h4>
            <table class="params-table">
              <thead>
                <tr>
                  <th>Parameter</th>
                  <th>Type</th>
                  <th>Required</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>phoneNumber</td>
                  <td>string</td>
                  <td>Yes</td>
                  <td>Phone number in E.164 format</td>
                </tr>
                <tr>
                  <td>callContent</td>
                  <td>string</td>
                  <td>No</td>
                  <td>Transcribed call content for analysis</td>
                </tr>
                <tr>
                  <td>callerName</td>
                  <td>string</td>
                  <td>No</td>
                  <td>Caller ID name if available</td>
                </tr>
              </tbody>
            </table>

            <h4>Response</h4>
            <div class="code-block">
              <pre>{
  "isSpam": true,
  "confidence": 0.95,
  "category": "telemarketing",
  "reasons": [
    "Known spam number",
    "Suspicious keywords detected"
  ],
  "phoneNumber": "+1234567890"
}</pre>
            </div>
          </div>

          <!-- SDK Integration Panel -->
          <div id="sdk-integration-panel" class="docs-panel">
            <h2>SDK Integration</h2>
            
            <h3>Installation</h3>
            <div class="install-tabs">
              <button class="install-tab active" data-lang="npm">npm</button>
              <button class="install-tab" data-lang="pip">pip</button>
              <button class="install-tab" data-lang="maven">Maven</button>
            </div>
            <div class="install-content">
              <div class="code-block">
                <code id="install-code">npm install spamklr-sdk</code>
              </div>
            </div>

            <h3>Basic Usage</h3>
            <div class="code-block">
              <pre>const SpamKLR = require('spamklr-sdk');

const client = new SpamKLR({
  apiKey: 'your-api-key'
});

const result = await client.detectSpam({
  phoneNumber: '+1234567890'
});

console.log(result.isSpam); // true/false</pre>
            </div>
          </div>

          <!-- Examples Panel -->
          <div id="examples-panel" class="docs-panel">
            <h2>Code Examples</h2>
            
            <h3>Real-time Call Screening</h3>
            <div class="code-block">
              <pre>// Integrate with your phone system
async function screenIncomingCall(phoneNumber) {
  try {
    const result = await spamklr.detectSpam({
      phoneNumber: phoneNumber
    });
    
    if (result.isSpam && result.confidence > 0.8) {
      // Block the call
      return { action: 'block', reason: result.category };
    } else {
      // Allow the call
      return { action: 'allow' };
    }
  } catch (error) {
    // Handle errors gracefully
    console.error('Spam detection failed:', error);
    return { action: 'allow' }; // Default to allowing calls
  }
}</pre>
            </div>

            <h3>Batch Processing</h3>
            <div class="code-block">
              <pre>// Process multiple numbers at once
const phoneNumbers = ['+1234567890', '+0987654321'];

const results = await Promise.all(
  phoneNumbers.map(number => 
    spamklr.detectSpam({ phoneNumber: number })
  )
);

results.forEach((result, index) => {
  console.log(`${phoneNumbers[index]}: ${result.isSpam}`);
});</pre>
            </div>
          </div>

          <!-- Other panels (webhooks, rate-limits, errors) would go here -->
          <div id="webhooks-panel" class="docs-panel">
            <h2>Webhooks</h2>
            <p>Configure webhooks to receive real-time notifications about spam detection events.</p>
            <p><em>Webhook documentation coming soon...</em></p>
          </div>

          <div id="rate-limits-panel" class="docs-panel">
            <h2>Rate Limits</h2>
            <p>SPAMKLR implements rate limiting to ensure fair usage and system stability.</p>
            <ul>
              <li><strong>Free tier:</strong> 1,000 requests per month</li>
              <li><strong>Pro tier:</strong> 100,000 requests per month</li>
              <li><strong>Enterprise:</strong> Custom limits available</li>
            </ul>
          </div>

          <div id="errors-panel" class="docs-panel">
            <h2>Error Handling</h2>
            <p>SPAMKLR uses conventional HTTP response codes to indicate success or failure.</p>
            
            <h3>Status Codes</h3>
            <table class="params-table">
              <thead>
                <tr>
                  <th>Code</th>
                  <th>Meaning</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>200</td>
                  <td>OK</td>
                  <td>Request successful</td>
                </tr>
                <tr>
                  <td>400</td>
                  <td>Bad Request</td>
                  <td>Invalid request parameters</td>
                </tr>
                <tr>
                  <td>401</td>
                  <td>Unauthorized</td>
                  <td>Invalid API key</td>
                </tr>
                <tr>
                  <td>429</td>
                  <td>Too Many Requests</td>
                  <td>Rate limit exceeded</td>
                </tr>
                <tr>
                  <td>500</td>
                  <td>Internal Server Error</td>
                  <td>Server error occurred</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<style>
.docs-hero {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
  padding: 100px 0;
  text-align: center;
}

.docs-sidebar {
  background: white;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  position: sticky;
  top: 2rem;
}

.docs-nav {
  list-style: none;
  padding: 0;
  margin: 1rem 0 0 0;
}

.docs-nav li {
  margin-bottom: 0.5rem;
}

.docs-nav-item {
  display: block;
  padding: 0.75rem 1rem;
  color: #6c757d;
  text-decoration: none;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.docs-nav-item:hover,
.docs-nav-item.active {
  background: var(--primary-color);
  color: white;
  text-decoration: none;
}

.docs-panel {
  display: none;
  background: white;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.docs-panel.active {
  display: block;
}

.code-block {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 5px;
  padding: 1rem;
  margin: 1rem 0;
  font-family: 'Courier New', monospace;
  overflow-x: auto;
}

.code-example {
  margin: 1rem 0;
}

.example-tabs,
.install-tabs {
  display: flex;
  border-bottom: 1px solid #dee2e6;
  margin-bottom: 1rem;
}

.example-tab,
.install-tab {
  background: none;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  border-bottom: 2px solid transparent;
  transition: all 0.3s ease;
}

.example-tab.active,
.install-tab.active {
  border-bottom-color: var(--primary-color);
  color: var(--primary-color);
}

.sdk-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin: 2rem 0;
}

.sdk-card {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 10px;
  text-align: center;
  transition: transform 0.3s ease;
}

.sdk-card:hover {
  transform: translateY(-5px);
}

.sdk-card i {
  font-size: 3rem;
  color: var(--primary-color);
  margin-bottom: 1rem;
}

.endpoint {
  background: #f8f9fa;
  padding: 1rem;
  border-radius: 5px;
  margin: 1rem 0;
  font-family: monospace;
}

.method {
  padding: 0.25rem 0.5rem;
  border-radius: 3px;
  color: white;
  font-weight: bold;
  margin-right: 0.5rem;
}

.method.post {
  background: #28a745;
}

.method.get {
  background: #007bff;
}

.params-table {
  width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
}

.params-table th,
.params-table td {
  border: 1px solid #dee2e6;
  padding: 0.75rem;
  text-align: left;
}

.params-table th {
  background: #f8f9fa;
  font-weight: 600;
}
</style>